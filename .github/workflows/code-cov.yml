name: CI Code Coverage

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  pull-requests: write
  contents: read

jobs:
  build-and-test-coverage:
    name : Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install latest Clang/LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh all

      - name: Install Build Dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: build-essential software-properties-common lcov gcovr
          version: 1.0
          execute_install_scripts: true

      - name: Set up CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latest
          ninjaVersion: latest

      - name: Build CMake Coverage Tests
        run: |
          export CC=$(which clang)
          export CXX=$(which clang++)
          cmake --workflow --preset ci-workflow-coverage
      - name: Generate LCOV Report
        run: |
          lcov --capture --directory ./build --output-file coverage.info \
          --rc geninfo_exclude="^.*/_deps/*|^.*/tests/*|^/usr/*" \
          --rc geninfo_unexecuted_blocks=1 \
          --ignore-errors mismatch
      - name: Generate Cobertura XML Report
        run: |
          gcovr --xml --output coverage.xml coverage.info

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ${{github.workspace}}/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          plugins: noop
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload Artifacts (Binaries)
        uses: actions/upload-artifact@v4
        with:
          name: lumi-binaries
          path: |
            build/bin/Debug/LumiTests
            
            build/lib/Debug/*.a
            build/lib/Debug/*.lib
      - name: Upload Artifacts (Reports)
        uses: actions/upload-artifact@v4
        with:
          name: lumi-reports
          path: |
            coverage.xml
            coverage.info
            coverage-filtered.info
            build/test-results.xml