name: CI Code Coverage

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  build-and-test-coverage:
    name: Test Coverage on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19"
          env: true

      - name: Install Build Dependencies (Linux)
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: build-essential software-properties-common lcov
          version: 1.0
          execute_install_scripts: true

      - name: Install Build Dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install lcov

      - name: Set up CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: latest
          ninjaVersion: latest

      - name: Run CMake Workflow for Coverage
        run: |
          cmake --workflow --preset ci-workflow-coverage

      - name: Generate LCOV Report using LLVM tools (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          llvm-profdata merge -sparse build/tests/default.profraw -o build/default.profdata
          llvm-cov export -format=lcov \
            -ignore-filename-regex=".*/_deps/.*|.*/tests/.*|/usr/.*|/opt/.*" \
            ./build/bin/Debug/LumiTests \
            -instr-profile=build/default.profdata \
            > coverage.info

      - name: Generate LCOV Report using LLVM tools (Windows)
        if: runner.os == 'Windows'
        run: |
          llvm-profdata merge -sparse build\tests\default.profraw -o build\default.profdata
          Get-ChildItem -Path build -Recurse
          llvm-cov export -format=lcov -ignore-filename-regex=".*/_deps/.*|.*/tests/.*|/usr/.*|/opt/.*" ./build/bin/Debug/LumiTests.exe -instr-profile=build/default.profdata > coverage.info
        shell: pwsh

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ${{ github.workspace }}/coverage.info
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload Test Results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: ./build/test-results.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          
      - name: Upload Artifacts (Binaries)
        uses: actions/upload-artifact@v4
        with:
          name: lumi-binaries-${{ matrix.os }}
          path: |
            build/bin/Debug/LumiTests*
            build/lib/Debug/*.a
            build/lib/Debug/*.lib
            build/include/lumi/metadata.cppm

      - name: Upload Artifacts (Reports)
        uses: actions/upload-artifact@v4
        with:
          name: lumi-reports-${{ matrix.os }}
          path: |
            coverage.info
            build/test-results.xml
